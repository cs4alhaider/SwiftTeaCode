{
  "description" : "",
  "name" : "MySwiftExtension",
  "expanders" : [
    {
      "name" : "Table view related methos",
      "is_enabled" : true,
      "description" : "Table view related methods \n\n> - tablem",
      "supported_languages" : [
        "swift"
      ],
      "pattern" : "tablem",
      "output_template" : "\n\/\/ MARK: - TableViewDelegate #\nextension <#class#>: UITableViewDelegate {\n    \n    func numberOfSections(in tableView: UITableView) -> Int {\n        return <#Int#>\n    }\n    \n    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n        switch section {\n        case 0:\n            <#code#>\n        default:\n            return 1\n        }\n    }\n    \n    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {\n        tableView.deselectRow(at: indexPath, animated: true)\n    }\n}\n\/\/\n\/\/ MARK: - UITableViewDataSource\nextension <#class#>: UITableViewDataSource {\n    \n    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {\n        switch indexPath.section {\n        case 0:\n            guard let cell = tableView.dequeueReusableCell(withIdentifier: <#cellID#>, for: indexPath) as? <#classTableViewCell#> else {\n                return UITableViewCell()\n            }\n            \/\/ cell.\n            return cell\n            \n        default:\n            return UITableViewCell()\n        }\n    }\n    \n    func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {\n        switch section {\n        case 0:\n            <#code#>\n        default:\n            return nil\n        }\n    }\n    \n    func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -> String? {\n        switch section {\n        case 0:\n            <#code#>\n        default:\n            return nil\n        }\n    }\n    \n    func tableView(_ tableView: UITableView, viewForFooterInSection section: Int) -> UIView? {\n        switch section {\n        case 0:\n            <#code#>\n        default:\n            return nil\n        }\n    }\n    \n    func tableView(_ tableView: UITableView, titleForFooterInSection section: Int) -> String? {\n        switch section {\n        case 0:\n            <#code#>\n        default:\n            return nil\n        }\n    }\n}\n\/\/",
      "identifier" : ""
    }
  ],
  "supported_languages" : [
    "any"
  ],
  "is_enabled" : true
}